

package userinterface.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  raunak
 */
public class AdminWorkAreaJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    Enterprise enterprise;
    
    /** Creates new form AdminWorkAreaJPanel */
    
    public AdminWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        valueLabel.setText(enterprise.getName());
        valueLabel1.setText(enterprise.getName());
        valueLabel2.setText(enterprise.getName());
        populateRequestTable();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        userJButton = new javax.swing.JButton();
        manageEmployeeJButton = new javax.swing.JButton();
        manageOrganizationJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        valueLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(251, 248, 242));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_widgets_black_48dp.png"))); // NOI18N
        jLabel1.setText("My Work Area -Adminstrative Role");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        userJButton.setBackground(new java.awt.Color(108, 180, 242));
        userJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_build_black_24dp.png"))); // NOI18N
        userJButton.setText("Manage User");
        userJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userJButtonActionPerformed(evt);
            }
        });
        add(userJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 190, -1));

        manageEmployeeJButton.setBackground(new java.awt.Color(108, 180, 242));
        manageEmployeeJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_build_black_24dp.png"))); // NOI18N
        manageEmployeeJButton.setText("Manage Employee");
        manageEmployeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEmployeeJButtonActionPerformed(evt);
            }
        });
        add(manageEmployeeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 190, -1));

        manageOrganizationJButton.setBackground(new java.awt.Color(108, 180, 242));
        manageOrganizationJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_build_black_24dp.png"))); // NOI18N
        manageOrganizationJButton.setText("Manage Organization");
        manageOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrganizationJButtonActionPerformed(evt);
            }
        });
        add(manageOrganizationJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Enterprise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 120, 30));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 530, 130, -1));

        workRequestJTable.setBackground(new java.awt.Color(131, 240, 143));
        workRequestJTable.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result", "Request Date", "Resolve Date", "Resolve Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setGridColor(new java.awt.Color(254, 254, 254));
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(5).setHeaderValue("Resolve Date");
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 550, 880, 140));

        workRequestJTable1.setBackground(new java.awt.Color(253, 88, 93));
        workRequestJTable1.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N
        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result", "Request Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable1.setGridColor(new java.awt.Color(254, 254, 254));
        jScrollPane2.setViewportView(workRequestJTable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 880, 140));

        jLabel2.setText("Completed Requests in");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 530, -1, -1));

        jLabel3.setText("Pending Requests in ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, -1, -1));

        valueLabel1.setText("<value>");
        add(valueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 130, -1));

        valueLabel2.setText("<value>");
        add(valueLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, 130, -1));
    }// </editor-fold>//GEN-END:initComponents
@SuppressWarnings("unchecked")
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        DefaultTableModel model2 = (DefaultTableModel) workRequestJTable1.getModel();
        model.setRowCount(0);
        model2.setRowCount(0);
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
            for( WorkRequest request: o.getWorkQueue().getWorkRequestList()){
                if(request.getStatus().equalsIgnoreCase("completed"))
                {
                    Object[] row = new Object[7];
                    row[0] = request;
                    row[1] = request.getReceiver();
                    row[2] = request.getStatus();
                    //String result = ((LabTestWorkRequest) request).getTestResult();
                    //row[3] = result == null ? "Waiting" : result;
                    row[3] = request.getResult2();
                    row[4] = request.getRequestDate();
                    row[5] = request.getResolveDate();
//                row[6] = request.getResolveDate()-request.getRequestDate();
                    if(request.getRequestDate()!=null&&request.getResolveDate()!=null){
                        Date firstDate = request.getRequestDate();
                        Date secondDate = request.getResolveDate();

                        long diffInMillies = Math.abs(secondDate.getTime() - firstDate.getTime());
                        long Days = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);
                        long Hours = (TimeUnit.HOURS.convert(diffInMillies, TimeUnit.MILLISECONDS)-(Days*24));
                        long Minutes = (TimeUnit.MINUTES.convert(diffInMillies, TimeUnit.MILLISECONDS)-(Days*24)-(Hours*60));
                        long seconds = (TimeUnit.SECONDS.convert(diffInMillies, TimeUnit.MILLISECONDS)-(Days*24)-(Hours*60)-(Minutes*60));
                        String diff = Days+" Days "+Hours+":"+Minutes+":"+seconds;
                        System.out.println(diff);
                        row[6] = diff;
                    }
                    else{
                        row[6]="Yet to be resolved";
                    }
                model.addRow(row);
                }
                else{
                    Object[] row = new Object[6];
                    row[0] = request;
                    row[1] = request.getReceiver();
                    row[2] = request.getStatus();
                    //String result = ((LabTestWorkRequest) request).getTestResult();
                    //row[3] = result == null ? "Waiting" : result;
                    row[3] = request.getResult2();
                    row[4] = request.getRequestDate();
                    row[5] = "NA";
                    
                    model2.addRow(row);
                }
                
                
            }
            
        }
    }
    private void userJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userJButtonActionPerformed
        // TODO add your handling code here:
        //System.out.println(enterprise.getEmployeeDirectory().getEmployeeList().size());
//        if(enterprise.getEmployeeDirectory().getEmployeeList().size()<2)
//        {
//            JOptionPane.showMessageDialog(null, "Create employees first.");
//            return;
//        }
        
        int number = 0;
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList())
        {
            number = Math.max(number, o.getEmployeeDirectory().getEmployeeList().size());
        }
        
        if(number == 0)
        {
            JOptionPane.showMessageDialog(null, "Create employees first.");
            return;
        }
        
        ManageUserAccountJPanel muajp = new ManageUserAccountJPanel(userProcessContainer, enterprise);
        userProcessContainer.add("ManageUserAccountJPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_userJButtonActionPerformed

    private void manageEmployeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEmployeeJButtonActionPerformed

        if(enterprise.getOrganizationDirectory().getOrganizationList().size()==0)
        {
            JOptionPane.showMessageDialog(null, "Create organization first");
            return;
        }
        
        ManageEmployeeJPanel manageEmployeeJPanel = new ManageEmployeeJPanel(userProcessContainer, enterprise.getOrganizationDirectory());
        userProcessContainer.add("manageEmployeeJPanel", manageEmployeeJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_manageEmployeeJButtonActionPerformed

    private void manageOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrganizationJButtonActionPerformed

        ManageOrganizationJPanel manageOrganizationJPanel = new ManageOrganizationJPanel(userProcessContainer, enterprise.getOrganizationDirectory(), enterprise);
        userProcessContainer.add("manageOrganizationJPanel", manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageOrganizationJButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton manageEmployeeJButton;
    private javax.swing.JButton manageOrganizationJButton;
    private javax.swing.JButton userJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JLabel valueLabel2;
    private javax.swing.JTable workRequestJTable;
    private javax.swing.JTable workRequestJTable1;
    // End of variables declaration//GEN-END:variables
    
}
