/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.CitizenRole;
import Business.Role.SystemAdminRole;
import Business.UserAccount.UserAccount;
import Business.DataStore;
import Business.UserAccount.CitizenUserAccount;
import Business.Validation.Validation;
import Validator.Validate;
import com.db4o.Db4o;
import java.awt.CardLayout;
import java.awt.Color;
import static java.awt.Color.RED;
import java.awt.Component;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.Border;
import userinterface.CitizenRole.CitizenWorkAreaJPanel;

/**
 *
 * @author vedan
 */
public class UserCreationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserCreationJPanel
    
    
    */
    EcoSystem system;
    JPanel container;
    DB4OUtil dB4OUtil;
    
    public UserCreationJPanel(JPanel userProcesscontainer, EcoSystem system, DB4OUtil dB4OUtil) {
        this.container = userProcesscontainer;
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        
        initComponents();
        
        infoLabel.setVisible(false);
        populateCombo();
        populateTA();
    }
    
    public void populateTA()
    {
        for(UserAccount user : system.getUserAccountDirectory().getUserAccountList())
        {
            System.out.println("\nName "+user.getEmployee().getName()+" UserName "+user.getUsername()+" password : "+user.getPassword()+ " security answer "+user.getAnswer());
        }
    }
    

    public void populateCombo()
    {
        combo.removeAllItems();;
        
        for(Network n : system.getNetworkList())
        {
            combo.addItem(n);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        ssnTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lastNameTxt = new javax.swing.JTextField();
        securityAnsTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        userNameJTextField = new javax.swing.JTextField();
        infoLabel = new javax.swing.JLabel();
        repasswordField = new javax.swing.JPasswordField();
        securityComboBox = new javax.swing.JComboBox();
        contactTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        creatBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(251, 248, 242));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sign Up");

        jPanel2.setBackground(new java.awt.Color(251, 248, 242));

        jPanel1.setBackground(new java.awt.Color(251, 248, 242));

        jLabel2.setText("Enter First Name: ");

        jLabel9.setText("Contact Number : ");

        nameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTxtKeyReleased(evt);
            }
        });

        jLabel5.setText("Select City : ");

        jLabel7.setText("Enter Last Name :");

        ssnTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ssnTxtKeyReleased(evt);
            }
        });

        jLabel4.setText("Enter Username : ");

        jLabel8.setText("SSN : ");

        lastNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lastNameTxtKeyReleased(evt);
            }
        });

        jLabel6.setText("Re-enter password : ");

        userNameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userNameJTextFieldFocusLost(evt);
            }
        });
        userNameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userNameJTextFieldKeyReleased(evt);
            }
        });

        infoLabel.setText("Username not available! ");

        repasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                repasswordFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                repasswordFieldKeyTyped(evt);
            }
        });

        securityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "What was your childhood nickname?", "What school did you attend for sixth grade?", "In what city or town did your mother and father meet?", "What is the name of the company of your first job?", "What is the country of your ultimate dream vacation?" }));

        contactTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contactTxtKeyReleased(evt);
            }
        });

        jLabel10.setText("Security Question : ");

        creatBtn.setBackground(new java.awt.Color(108, 180, 242));
        creatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_check_black_24dp.png"))); // NOI18N
        creatBtn.setText("Sign Up");
        creatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creatBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter Password : ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(69, 69, 69)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(contactTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                            .addComponent(ssnTxt)
                            .addComponent(lastNameTxt)
                            .addComponent(nameTxt))
                        .addGap(0, 152, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(repasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                    .addComponent(passwordField)
                                    .addComponent(userNameJTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(combo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(securityAnsTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                .addComponent(securityComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 1, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(creatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ssnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(repasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(securityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(securityAnsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(creatBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(268, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void creatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creatBtnActionPerformed
        // Get user name
        
        String fname = nameTxt.getText();
        String lname = lastNameTxt.getText();
        long ssn = 1, contact = 1;
        
        if(Validation.isNumber(ssnTxt.getText()))
            ssn = Long.parseLong(ssnTxt.getText());
        
        if(Validation.isNumber(contactTxt.getText()))
            contact = Long.parseLong(contactTxt.getText());        
        
        String userName = userNameJTextField.getText();        
        char[] passwordCharArray = passwordField.getPassword();
        char[] repasswordCharArray = repasswordField.getPassword();        
        
        String password = String.valueOf(passwordCharArray);
        String repassword = String.valueOf(repasswordCharArray);
        
        String question = securityComboBox.getSelectedItem().toString();
        String securityAns = securityAnsTextField.getText();
            
        Network network = (Network) combo.getSelectedItem();
        
        Map<JComponent,String> fields = new HashMap<JComponent,String>();
        
        
        //&& Validation.textAndSpace(lname) && Validation.userNameWithUnderscoreDotNumbers(userName)))
        if(!Validation.textAndSpace(fname))
        {
            fields.put(nameTxt, "First Name");
        }
        if(!Validation.textAndSpace(lname))
        {
            fields.put(lastNameTxt, "Last Name");
        }
        if(!Validation.ssnCheck(ssnTxt.getText()))
        {
            fields.put(ssnTxt, "SSN");
        }
        if(!Validation.phoneNumberCheck(contactTxt.getText()))
        {
            fields.put(contactTxt, "Contact Number");
        }
        if(!Validation.userNameWithUnderscoreDotNumbers(userName))
        {
            fields.put(userNameJTextField, "Username field");
        }
        if(!Validation.passwordPatternCorrect(password))
        {
            fields.put(passwordField, "Password Field");
        }
        if(!Validation.passwordPatternCorrect(repassword))
        {
            fields.put(repasswordField, "Re-Password Field");
        }
        
        if(!password.equals(repassword))
        {
            JOptionPane.showMessageDialog(null, "Passwords do not match");
            return;
        }
        
        if(securityAns.isEmpty())
        {
            fields.put(securityAnsTextField, "Security Answer");
        }
        
        String errorMsg = "Invalid input. Please check the following fields : \n";
        int count = 1;
        if(fields.size()!=0)
        {
            for(Map.Entry<JComponent,String> mp : fields.entrySet())
            {
                errorMsg = errorMsg + count + ". " + mp.getValue()+" \n";
                mp.getKey().setBorder(BorderFactory.createLineBorder(Color.RED));
                count++;
            }
            JOptionPane.showMessageDialog(null, errorMsg);
            return;
        }
        
        if(network==null)
        {
            JOptionPane.showMessageDialog(null, "No network selected");
            return;
        }
        
        
        
        
        
        if(system.getUserAccountDirectory().checkIfUsernameIsUnique(userName))
        {
        
            Employee employee = system.getEmployeeDirectory().createEmployee(nameTxt.getText());
        
        //CitizenUserAccount c = new CitizenUserAccount(userName, userName, WIDTH, WIDTH, userName, userName);
        //String fname, String lname, int ssn, int contactnum, Object securityquestion, String securityans){
        UserAccount ua = system.getUserAccountDirectory().createUserAccount(userName, password, employee, new CitizenRole(), network, fname,lname, ssn , contact, question,securityAns);
        
        JOptionPane.showMessageDialog(null, ua.getUsername()+" created successfully.");

        }
        else
        {
            JOptionPane.showMessageDialog(null, "Username not available");
        }
        //network.getCitizensList().add(ua);
        
        //System.out.println("from UserAccount field "+ ua.getNetwork().getName());
        
        System.out.println("Testing if account has been created "+ system.getUserAccountDirectory().authenticateUser(userName, password).getUsername());
        dB4OUtil.storeSystem(system);
        
        
        
        
        
        
        /*if(Validate.usernamePatternCorrect(userNameJTextField.getText()) && Validate.passwordPatternCorrect(passwordField.getPassword().toString()) && 
                Validate.namePatternCorrect(nameTxt.getText()) )
        {
            
        if(system.getUserAccountDirectory().checkIfUsernameIsUnique(userName))
        {
        
        warning.setVisible(false);
            
        Network network = (Network) combo.getSelectedItem();
        Employee employee = system.getEmployeeDirectory().createEmployee(nameTxt.getText());
        
        //CitizenUserAccount c = new CitizenUserAccount(userName, userName, WIDTH, WIDTH, userName, userName);
        
        UserAccount ua = system.getUserAccountDirectory().createUserAccount(userName, password, employee, new CitizenRole(), network, );
        
        //JOptionPane.showMessageDialog(null, ua.getUsername());

        
        //network.getCitizensList().add(ua);
        
        System.out.println("from UserAccount field "+ ua.getNetwork().getName());
        System.out.println("Testing if account has been created "+ system.getUserAccountDirectory().authenticateUser(userName, password).getUsername());
        dB4OUtil.storeSystem(system);
        
            
        }
        else
        { warning.setVisible(true);
        
        }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Invalid Input \nName >= 2 Alphabets only \nUserName >= 5 "
                    + "\nPassword >=5 1 \nAtleast 1 Uppercase \n1 Lowercase \n1Special Character");
        }
        */
        
        
                
        populateTA();
        
        container.remove(this);
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
        
    }//GEN-LAST:event_creatBtnActionPerformed

    private void userNameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameJTextFieldFocusLost
        // TODO add your handling code here:
        
       userNameJTextField.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        
       
    }//GEN-LAST:event_userNameJTextFieldFocusLost

    private void repasswordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_repasswordFieldKeyTyped
        // TODO add your handling code here:
//        char[] pwd = passwordField.getPassword();
//        char[] re = repasswordField.getPassword();
//        
//        String password = String.valueOf(pwd);
//        String repassword = String.valueOf(re);
//        
//        if(!password.equals(repassword))
//        {
//            repasswordField.setBorder(BorderFactory.createLineBorder(Color.RED));
//        }
//        else
//            repasswordField.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_repasswordFieldKeyTyped

    private void repasswordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_repasswordFieldKeyReleased
        // TODO add your handling code here:
        char[] pwd = passwordField.getPassword();
        char[] re = repasswordField.getPassword();
        
        String password = String.valueOf(pwd);
        String repassword = String.valueOf(re);
        
        if(!password.equals(repassword))
        {
            repasswordField.setBorder(BorderFactory.createLineBorder(Color.RED));
            passwordField.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
        else
        {
            repasswordField.setBorder(BorderFactory.createLineBorder(Color.GREEN));
            passwordField.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }
    }//GEN-LAST:event_repasswordFieldKeyReleased

    private void userNameJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameJTextFieldKeyReleased
        // TODO add your handling code here:
        if(system.getUserAccountDirectory().checkIfUsernameIsUnique(userNameJTextField.getText()))
        {
            infoLabel.setText("Available");
            userNameJTextField.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }
        else
        {
            infoLabel.setText("Not Available");
            userNameJTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
        
    }//GEN-LAST:event_userNameJTextFieldKeyReleased

    private void nameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTxtKeyReleased
        // TODO add your handling code here:
        if(Validate.namePatternCorrect(nameTxt.getText()))
        {
             nameTxt.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }
        else
        {
            nameTxt.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
    }//GEN-LAST:event_nameTxtKeyReleased

    private void lastNameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameTxtKeyReleased
        // TODO add your handling code here:
        if(Validate.namePatternCorrect(lastNameTxt.getText()))
        {
             lastNameTxt.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }
        else
        {
            lastNameTxt.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
    }//GEN-LAST:event_lastNameTxtKeyReleased

    private void ssnTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssnTxtKeyReleased
        // TODO add your handling code here:
        if(Validate.ssnPatternCorrect(ssnTxt.getText()))
        {
             ssnTxt.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }
        else
        {
            ssnTxt.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
    }//GEN-LAST:event_ssnTxtKeyReleased

    private void contactTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactTxtKeyReleased
        // TODO add your handling code here:
         if(Validate.contactPatternCorrect(contactTxt.getText()))
        {
             contactTxt.setBorder(BorderFactory.createLineBorder(Color.GREEN));
        }
        else
        {
            contactTxt.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
    }//GEN-LAST:event_contactTxtKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox combo;
    private javax.swing.JTextField contactTxt;
    private javax.swing.JButton creatBtn;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField repasswordField;
    private javax.swing.JTextField securityAnsTextField;
    private javax.swing.JComboBox securityComboBox;
    private javax.swing.JTextField ssnTxt;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables
}
