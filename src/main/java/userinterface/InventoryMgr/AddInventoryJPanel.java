/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InventoryMgr;

import Business.Enterprise.Enterprise;
import Business.Enterprise.MunicipalEnterprise;
import Business.Inventory.InventoryItem;
import Business.Validation.Validation;
import Business.WorkQueue.InventoryWorkRequest;
import Validator.Validate;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.WaterSupplyEngineerRole.WaterSupplyEngineerWorkAreaJPanel1;

/**
 *
 * @author vedan
 */
public class AddInventoryJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    //MunicipalEnterprise mp;
    Enterprise enterprise;
    /**
     * Creates new form AddInventoryJPanel
     */
    public AddInventoryJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        //this.mp = mp;
        this.enterprise = enterprise;
        populateInventoryTable();
        populatePrice();
    }
    
    public void populatePrice()
    {
        
        if(itemComboBox.getSelectedItem().toString().equals("Asphalt"))
        {
            priceTxt.setText("75");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("concrete"))
        {
            priceTxt.setText("100");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("Bitumen"))
        {
            priceTxt.setText("35");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("Tar"))
        {
            priceTxt.setText("500");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("Cement"))
        {
            priceTxt.setText("225");
        }
    }
    
    public void populateInventoryTable()
    {
        DefaultTableModel model = (DefaultTableModel)inventoryTable.getModel();
        
        model.setRowCount(0);
        
        System.out.println(enterprise.getInventoryDirectoryEnterpriseLevel().getInventoryList().size()+" this is the size");
        
        try
        {
        for(InventoryItem item :  enterprise.getInventoryDirectoryEnterpriseLevel().getInventoryList()){
            
            Object[] row = new Object[3];
            
            row[0] = item;
            row[1] = item.getQuantity();
            row[2] = item.getPrice();
            //row[1] = item.getItemType();
            
            
            model.addRow(row);
        }}
        catch(Exception e)
        {
            System.out.println("Cant populate table");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        priceTxt = new javax.swing.JTextField();
        quantityTxt = new javax.swing.JTextField();
        addItemBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        itemComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(251, 248, 242));

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(inventoryTable);

        jLabel1.setText("Name : ");

        jLabel3.setText("Quantity : ");

        jLabel4.setText("Price : ");

        priceTxt.setEditable(false);

        addItemBtn.setBackground(new java.awt.Color(108, 180, 242));
        addItemBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_add_box_black_24dp.png"))); // NOI18N
        addItemBtn.setText("Add Item to Inventory");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(254, 254, 254));
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_arrow_back_black_24dp.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(254, 99, 108));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_highlight_off_black_24dp.png"))); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        itemComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Asphalt", "Bitumen", "Cement", "Concrete", "Tar" }));
        itemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("lb");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addGap(39, 39, 39)
                        .addComponent(addItemBtn)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(18, 18, 18)
                                            .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(18, 18, 18)
                                            .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(70, 70, 70))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel3, jLabel4});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(priceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addItemBtn)
                    .addComponent(backBtn)
                    .addComponent(jButton3))
                .addContainerGap(350, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        // TODO add your handling code here:
        
        String name = itemComboBox.getSelectedItem().toString();
        //String type = typeTxt.getText();
        if(!Validation.isNumber(quantityTxt.getText()))
        {
            JOptionPane.showMessageDialog(null, "Invalid input. Try again!");
        }
        
        int quantity = Integer.parseInt(quantityTxt.getText());
        int price = Integer.parseInt(priceTxt.getText());
        
        
        if(Validate.namePatternCorrect(name) && 
                Validate.quantityPatternCorrect(quantityTxt.getText()) && Validate.quantityPatternCorrect(priceTxt.getText()))
        {
            
        
        
        enterprise.getInventoryDirectoryEnterpriseLevel().createItem(enterprise, name, quantity, price);
        
        //enterprise.getInventoryDirectoryEnterpriseLevel().getInventoryList().add(it);
        
        //ArrayList<InventoryItem> list 
        //list.add(it);
        //enterprise.getInventoryDirectoryEnterpriseLevel().setInventoryList(list);
        
        System.out.println(enterprise.getInventoryDirectoryEnterpriseLevel().getInventoryList().size()+" size outside ");
        
        
        //System.out.println(it.getItemName());
        //typeTxt.setText("");
        
        quantityTxt.setText("");
        priceTxt.setText("");
             
        populateInventoryTable();
        populatePrice();
        }
        else
                {
                        JOptionPane.showMessageDialog(null, "Invalid Input");
                        populateInventoryTable();
                        populatePrice();
                }
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        InventoryMgrWorkAreaJPanel dwjp = (InventoryMgrWorkAreaJPanel) component;
        dwjp.populateTable();
        dwjp.populateInventoryTable();;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = inventoryTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

                
        InventoryItem item = (InventoryItem)inventoryTable.getValueAt(selectedRow, 0);
        
        enterprise.getInventoryDirectoryEnterpriseLevel().getInventoryList().remove(item);
        populateInventoryTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void itemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboBoxActionPerformed
        // TODO add your handling code here:
        if(itemComboBox.getSelectedItem().toString().equals("Asphalt"))
        {
            priceTxt.setText("75");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("concrete"))
        {
            priceTxt.setText("100");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("Bitumen"))
        {
            priceTxt.setText("35");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("Tar"))
        {
            priceTxt.setText("500");
        }
        else if(itemComboBox.getSelectedItem().toString().equals("Cement"))
        {
            priceTxt.setText("225");
        }
    }//GEN-LAST:event_itemComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JComboBox itemComboBox;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JTextField quantityTxt;
    // End of variables declaration//GEN-END:variables
}
